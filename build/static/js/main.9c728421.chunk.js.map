{"version":3,"sources":["services/persons.js","components/Person.js","components/PersonFilter.js","components/PersonForm.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Person","person","deletePerson","name","number","onClick","PersonFilter","persons","newFilter","personsToShow","filter","toLowerCase","includes","map","PersonForm","newName","newNumber","addPerson","handlePersonChange","handleNumberChange","onSubmit","value","onChange","type","Notification","message","className","App","useState","setPersons","setNewName","setNewNumber","setNewFilter","errorMessage","setErrorMessage","useEffect","personService","initialPersons","console","log","event","target","preventDefault","personObject","some","find","window","confirm","returnedPerson","concat","setTimeout","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9c728421.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    // console.log(request)\n    return request.then(response => response.data)\n}\n\nconst deletePerson = (id, newObject) => {\n    const request = axios.delete(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, deletePerson }","import React from 'react'\n\nconst Person = ({ person, deletePerson }) => {\n  return (\n    <p>{person.name} {person.number} &nbsp;\n\n    <button onClick={() => (deletePerson(person.id, person))}>Delete</button></p>\n  )\n}\n\nexport default Person","import React from 'react'\nimport Person from './Person'\n\nconst PersonFilter = ({ persons, newFilter, deletePerson }) => {\n\n    const personsToShow =\n        persons.filter(person =>\n            person.name.toLowerCase().includes(newFilter.toLowerCase()))\n\n    return (\n        <dir>\n            {personsToShow.map(person =>\n                <Person key={person.name} person={person} deletePerson={deletePerson} />\n            )}\n        </dir>\n    )\n}\n\nexport default PersonFilter","import React from 'react'\n\nconst PersonForm = ({ newName, newNumber, addPerson, handlePersonChange, handleNumberChange }) => {\n\n\n    return (\n        <form onSubmit={addPerson}>\n            <div>\n                name: <input value={newName} onChange={handlePersonChange} />\n            </div>\n            <div>\n                number: <input value={newNumber} onChange={handleNumberChange} />\n            </div>\n            <div>\n                <button type=\"submit\">add</button>\n            </div>\n        </form>\n    )\n}\n\n\nexport default PersonForm","import React from 'react'\n\nconst Notification = ({ message }) => {\n    if (message === null) {\n      return null\n    }\n  \n    return (\n      <div className=\"error\">\n        {message}\n      </div>\n    )\n  }\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\nimport PersonFilter from './components/PersonFilter'\nimport PersonForm from './components/PersonForm'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [newFilter, setNewFilter] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        console.log(initialPersons)\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n\n\n    if (!persons.some(person => person.name === newName)) {\n      personService\n        .create(personObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setNewName('')\n          setNewNumber('')\n          setErrorMessage(\n            `'${personObject.name}' added to phonebook`\n          )\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000)\n\n        })\n    } else {\n      const id = persons.find(person => person.name === newName).id\n      if (window.confirm(`Change number for ${personObject.name}?`)) {\n        personService\n          .update(id, personObject)\n          .then(returnedPerson => {\n            setPersons((persons.filter(person => person.id !== id)).concat(returnedPerson))\n            setNewName('')\n            setNewNumber('')\n            setErrorMessage(\n              `'${personObject.name}' number changed`\n            )\n            setTimeout(() => {\n              setErrorMessage(null)\n            }, 5000)\n\n          })\n      }\n    }\n  }\n\n  const handlePersonChange = (event) => {\n    console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    console.log(event.target.value)\n    setNewFilter(event.target.value)\n  }\n\n  const deletePerson = (id, personObject) => {\n    if (window.confirm(`Delete ${personObject.name} ?`)) {\n      personService\n        .deletePerson(id, personObject)\n        .then(response => {\n          setPersons(persons.filter(person => (person.id !== id)))\n        })\n      setErrorMessage(\n        `'${personObject.name}' was deleted from phonebook`\n      )\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <form>\n        <div>\n          filter shown with <input value={newFilter}\n            onChange={handleFilterChange} />\n        </div>\n      </form>\n      <h2>add a new</h2>\n      <Notification message={errorMessage} />\n      <PersonForm newName={newName} newNumber={newNumber}\n        addPerson={addPerson} handlePersonChange={handlePersonChange}\n        handleNumberChange={handleNumberChange} />\n      <h2>Numbers</h2>\n      <PersonFilter persons={persons} newFilter={newFilter}\n        deletePerson={deletePerson} />\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)"],"sourceRoot":""}